{
"openapi": "3.0.1",
"info": {
  "title": "Property API",
  "description": "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.",
  "termsOfService": "http://swagger.io/terms/",
  "contact": {
    "email": "apiteam@swagger.io"
  },
  "license": {
    "name": "Apache 2.0",
    "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
  },
  "version": "1.0.0"
},
"externalDocs": {
  "description": "Find out more about Swagger",
  "url": "http://swagger.io"
},
"servers": [
  {
    "url": "http://localhost:3000/"
  }

],
"tags": [
  {
    "name": "user",
    "description": "Operations about user"
  },
  {
    "name": "office",
    "description": "Operations about office"
  },
  {
    "name": "home",
    "description": "Operations about home"
  }
],
"paths": {
  "/user": {
    "get": {
      "tags": [
        "user"
      ],
      "summary": "Get all users",
      "description": "This endpoint display user list",
      "responses": {
        "200": {
          "description": "successful operation",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/user/properties"
                }
              }
            }
          }
        },
        "400": {
          "description": "Invalid status value",
          "content": {}
        }
      }
    }
  },
  "/user/register": {
    "post": {
      "tags": [
        "user"
      ],
      "summary":"POST register new user",
      "description": "This endpoint let you register new user",
      "requestBody": {
        "description": "Create new user",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/user"
            }
          }
      }
    },
      "responses": {
        "200": {
          "description": "successful operation",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/user/properties"
                }
              }
            }
        }
      } 
    },
    "400": {
      "description": "Invalid status value",
      "content": {}
    }
  }
  },
  "user/login": {
    
  }
},




"components": {
  "schemas": {
    "user": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "unique": true,
          "require": true
        },
        "email": {
          "type": "string",
          "unique": true,
          "require": true
        },
        "password": {
          "type": "string",
          "require": true
        }
      }
    },
    "office": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "street": {
          "type": "string",
          "required": true
        },
        "city": {
          "type": "string",
          "required": true
        },
        "postCode": {
          "type": "number",
          "required": true
        },
        "country": {
          "type": "string",
          "required": true
        },
        "location": {
           "type": {
             "type": "string",
             "enum": "number"
           },
           "coordinates": {
             "type": "number",
             "index": "2dsphere"
           }
        },
        "building_use": {
          "type": "string",
          "required": true
        },
        "title": {
          "type": "string",
          "required": true
        },
        "description": {
          "type": "string",
          "required": true
        },
        "price": {
          "type": "number",
          "required": true
        },
        "image": {
          "type": "string",
          "required": true
        },
        "buyRent": {
          "type": "boolean",
          "required": true
        },
        "date": {
          "type": "date"
        }
      }
    }
    
    }




}
}

