{
"openapi": "3.0.1",
"info": {
  "title": "Property API",
  "description": "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.",
  "termsOfService": "http://swagger.io/terms/",
  "contact": {
    "email": "apiteam@swagger.io"
  },
  "license": {
    "name": "Apache 2.0",
    "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
  },
  "version": "1.0.0"
},
"externalDocs": {
  "description": "Find out more about Swagger",
  "url": "http://swagger.io"
},
"servers": [
  {
    "url": "http://localhost:3000/"
  }

],
"tags": [
  {
    "name": "user",
    "description": "Operations about user"
  },
  {
    "name": "office",
    "description": "Operations about office"
  },
  {
    "name": "home",
    "description": "Operations about home"
  }
],
"paths": {
  "/user": {
    "get": {
      "tags": [
        "user"
      ],
      "summary": "GET all users",
      "description": "This endpoint display user list",
      "responses": {
        "200": {
          "description": "successful operation",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                  "$ref": "#/components/schemas/User"
                
              },
              "examples": {
                "User": {
                  "value": {
                    "home": [
                      "5e8fbaa0dafefd392b6a0fed"
                    ],
                    "office": [],
                    "_id": "5e8f70a9245a470fb8942738",
                    "name": "test",
                    "email": "test@test.com",
                    "password": "12345",
                    "__v": 0
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Invalid tag value",
          "content": {}
        }
      }
    }
  },
  "/user/register": {
    "post": {
      "tags": [
        "user"
      ],
      "summary":"POST register new user",
      "description": "This endpoint let you register new user",
      "requestBody": {
        "description": "Create new user",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          }
      },
      "required": true
    },
      "responses": {
        "200": {
          "description": "successful operation",
          "content": {
            "application/json": {
              "schema": {
                "type":"array",
                "items": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
        }
      },
      "400": {
        "description": "Invalid status value",
        "content": {}
      }
    }
  }
  },
  "/user/login": {
    "post": {
      "tags": [
        "user"
      ],
      "summary": "POST login user",
      "requestBody": {
        "description": "List of user object",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Login"
            }
          }
        },
        "required": true
      },
      "responses": {
        "200": {
          "description" : "successful operation",
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref" :"#/components/schemas/Login"
                }
              }
            }
          }
        },
      "400": {
        "description": "Invalid status value",
        "content": {}
      }
      }
    }
  },
  "/user/{id}": {
    "get":{
      "tags": [
        "user"
      ],
      "summary": "GET user by id",
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "description": "this is the unique name of user",
                "required": true,
                "type": "string"
                
            }
          ],
    "responses": {
      "200": {
        "description": "successful operation",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      },
        "400": {
          "description": "Invalid username supplied",
          "content": {}
        },
        "404": {
          "description": "User not found",
          "content": {}
        }
      }
    }
  },
  "/user/{id}/home": {
    "post": {
      "tags": [
        "user"
      ],
      "summary": "POST home by user id",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "this is the unique name of user",
          "required": true,
          "type": "string"
          
      }
    ],
    "requestBody": {
      "description": "List of user object",
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "$ref": "#/components/schemas/Home"
          }
        }
      },
      "required": true
    },
      "responses": {
        "200": {
          "description" : "successful operation"

        },
      "400": {
        "description": "Invalid status value",
        "content": {}
      }
     }
    }
   }
  },
"components": {
  "schemas": {
    "User": {
      "type": "object",
      "properties": {
        
        "name": {
          "type": "string",
          "unique": true,
          "require": true
        },
        "email": {
          "type": "string",
          "unique": true,
          "require": true
        },
        "password": {
          "type": "string",
          "require": true
        },
        "home": {
          "type": "array",
          "readOnly": true
        },
        "office": {
          "type": "array",
          "readOnly": true
        }
      }
    },
    "Login": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "require": true
        },
        "password": {
          "type": "string",
          "require": true
        }
      }
    },
    "Home": {
      "type": "object",
      "properties": {

        "street": {
          "type": "string",
          "required": true
        },
        "city": {
          "type": "string",
          "required": true
        },
        "postCode": {
          "type": "number",
          "required": true
        },
        "country": {
          "type": "string",
          "required": true
        },
        "location": {
           "type": {
             "type": "string",
             "enum": "number"
           },
           "coordinates": {
             "type": "number",
             "index": "2dsphere"
           },
           "readOnly": true
        },
        "type": {
          "type": "string",
          "required": true
        },
        "condition": {
          "type": "string",
          "required": true
        },
        "equipment": {
          "type": "string",
          "required": true
        },
        "bathrooms": {
          "type": "number",
          "required": true
        },
        "bedrooms": {
          "type": "number",
          "required": true
        },
        "title": {
          "type": "string",
          "required": true
        },
        "description": {
          "type": "string",
          "required": true
        },
        "price": {
          "type": "number",
          "required": true
        },
        "image": {
          "type": "array",
            "readOnly": true
        },
        "buyRent": {
          "type": "boolean",
          "required": true
        },
        "date": {
          "type": "string"
        }
      }
    },
    "office": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "street": {
          "type": "string",
          "required": true
        },
        "city": {
          "type": "string",
          "required": true
        },
        "postCode": {
          "type": "number",
          "required": true
        },
        "country": {
          "type": "string",
          "required": true
        },
        "location": {
           "type": {
             "type": "string",
             "enum": "number"
           },
           "coordinates": {
             "type": "number",
             "index": "2dsphere"
           }
        },
        "building_use": {
          "type": "string",
          "required": true
        },
        "title": {
          "type": "string",
          "required": true
        },
        "description": {
          "type": "string",
          "required": true
        },
        "price": {
          "type": "number",
          "required": true
        },
        "image": {
          "type": "string",
          "required": true
        },
        "buyRent": {
          "type": "boolean",
          "required": true
        },
        "date": {
          "type": "date"
        }
      }
    }
    
    }
 }
}

